{
    "collab_server" : "",
    "contents" : "#\n# This is the server logic of a Shiny web application. You can run the \n# application by clicking 'Run App' above.\n#\n# Find out more about building applications with Shiny here:\n# \n#    http://shiny.rstudio.com/\n#\n\nlibrary(shiny)\nlibrary(dplyr)\n\nbeer_reviews <- read.csv(\"beer_reviews.csv\", sep = \",\", header = TRUE, encoding = \"UTF-8\")\nbreweries <- beer_reviews %>% group_by(brewery_name) %>% summarize(n_obs = n()) %>% filter(n_obs > 50) %>% select(brewery_name)\nstyles <- beer_reviews %>% group_by(beer_style) %>% summarize(n_obs = n()) %>% filter(n_obs > 50) %>% select(beer_style)\nbeers <- beer_reviews %>% group_by(beer_name) %>% summarize(n_obs = n()) %>% filter(n_obs > 50) %>% select(beer_name)\n\n# Define server logic\nshinyServer(function(input, output) {\n  \n### Retrieve recommendations for Beers  \n  output$beer <- renderDataTable({\n    \n    ## Top Recommendations ##\n    if (input$rec1 == \"general\"){\n      beer1 <- beer_reviews %>%\n        group_by(beer_name) %>%\n        summarize(n_obs = n(),\n                  avg_rating = round(mean(review_overall), digits=2),\n                  avg_abv = round(mean(beer_abv, na.rm = TRUE), digits=2)) %>%\n        filter(n_obs >= input$reviews1) %>%\n        filter(avg_abv >= input$abv1[1], avg_abv <= input$abv1[2]) %>%\n        select(beer_name, avg_rating, avg_abv) %>%\n        top_n(n = input$n1, wt = avg_rating) %>%\n        arrange(desc(avg_rating))\n      \n      colnames(beer1) <- c(\"Beer Name\", \"Average Overall Rating\", \"Alcohol %\")\n      return(beer1)\n    }\n    else if (input$rec1 == \"category\"){\n      if (input$cat == \"brewery\"){\n        beer2 <- beer_reviews %>%\n          filter(brewery_name == input$brew) %>%\n          group_by(beer_name) %>%\n          summarize(n_obs = n(),\n                    avg_rating = round(mean(review_overall), digits=2),\n                    avg_abv = round(mean(beer_abv, na.rm = TRUE), digits=2)) %>%\n          filter(n_obs >= input$reviews1) %>%\n          filter(avg_abv >= input$abv1[1], avg_abv <= input$abv1[2]) %>%\n          select(beer_name, avg_rating, avg_abv) %>%\n          top_n(n = input$n1, wt = avg_rating) %>%\n          arrange(desc(avg_rating))\n        \n        colnames(beer2) <- c(\"Beer Name\", \"Average Overall Rating\", \"Alcohol %\")\n        return(beer2)\n      }\n      else if (input$cat == \"style\"){\n        beer3 <- beer_reviews %>%\n          filter(brewery_name == input$sty) %>%\n          group_by(beer_name) %>%\n          summarize(n_obs = n(),\n                    avg_rating = round(mean(review_overall), digits=2),\n                    avg_abv = round(mean(beer_abv, na.rm = TRUE), digits=2)) %>%\n          filter(n_obs >= input$reviews1) %>%\n          filter(avg_abv >= input$abv1[1], avg_abv <= input$abv1[2]) %>%\n          select(beer_name, avg_rating, avg_abv) %>%\n          top_n(n = input$n1, wt = avg_rating) %>%\n          arrange(desc(avg_rating))\n        \n        colnames(beer3) <- c(\"Beer Name\", \"Average Overall Rating\", \"Alcohol %\")\n        return(beer3)\n      }\n    }\n    ## Item-Based Collaborative Filtering\n    \n    \n  }, \n      options = list(pageLength = 15,\n                    lengthChange = FALSE))\n  \n  \n### Retrieve top recommendations for Beer Styles ###  \n  output$style <- renderDataTable({\n    \n    if (input$rec3 == \"general\"){\n      style1 <- beer_reviews %>%\n        group_by(beer_style) %>%\n        summarize(n_obs = n(),\n                  avg_rating = round(mean(review_overall), digits=2),\n                  avg_abv = round(mean(beer_abv, na.rm = TRUE), digits=2)) %>%\n        filter(n_obs >= input$reviews3) %>%\n        filter(avg_abv >= input$abv3[1], avg_abv <= input$abv3[2]) %>%\n        select(beer_style, avg_rating, avg_abv) %>%\n        top_n(n = input$n3, wt = avg_rating) %>%\n        arrange(desc(avg_rating))\n      \n      colnames(style1) <- c(\"Beer Style Name\", \"Average Overall Rating\", \"Alcohol %\")\n      return(style1)\n    }\n    else if (input$rec3 == \"category\"){\n      style2 <- beer_reviews %>%\n        filter(brewery_name == input$cat3) %>%\n        group_by(beer_style) %>%\n        summarize(n_obs = n(),\n                  avg_rating = round(mean(review_overall), digits=2),\n                  avg_abv = round(mean(beer_abv, na.rm = TRUE), digits=2)) %>%\n        filter(n_obs >= input$reviews3) %>%\n        filter(avg_abv >= input$abv3[1], avg_abv <= input$abv3[2]) %>%\n        select(beer_style, avg_rating, avg_abv) %>%\n        top_n(n = input$n3, wt = avg_rating) %>%\n        arrange(desc(avg_rating))\n      \n      colnames(style2) <- c(\"Beer Style Name\", \"Average Overall Rating\", \"Alcohol %\")\n      return(style2)\n    }\n  }, \n      options = list(pageLength = 15,\n                    lengthChange = FALSE))\n  \n  \n### Retrieve top recommendations for Breweries ###  \n  output$brewery <- renderDataTable({\n    \n    if (input$rec2 == \"general\"){\n      brewery1 <- beer_reviews %>%\n        group_by(brewery_name) %>%\n        summarize(n_obs = n(),\n                  avg_rating = round(mean(review_overall), digits=2),\n                  avg_abv = round(mean(beer_abv, na.rm = TRUE), digits=2)) %>%\n        filter(n_obs >= input$reviews2) %>%\n        filter(avg_abv >= input$abv2[1], avg_abv <= input$abv2[2]) %>%\n        select(brewery_name, avg_rating, avg_abv) %>%\n        top_n(n = input$n2, wt = avg_rating) %>%\n        arrange(desc(avg_rating))\n      \n      colnames(brewery1) <- c(\"Brewery Name\", \"Average Overall Rating\", \"Alcohol %\")\n      return(brewery1)\n    }\n    else if (input$rec2 == \"category\"){\n      brewery2 <- beer_reviews %>%\n        filter(beer_style == input$cat2) %>%\n        group_by(brewery_name) %>%\n        summarize(n_obs = n(),\n                  avg_rating = round(mean(review_overall), digits=2),\n                  avg_abv = round(mean(beer_abv, na.rm = TRUE), digits=2)) %>%\n        filter(n_obs >= input$reviews2) %>%\n        filter(avg_abv >= input$abv2[1], avg_abv <= input$abv2[2]) %>%\n        select(brewery_name, avg_rating, avg_abv) %>%\n        top_n(n = input$n2, wt = avg_rating) %>%\n        arrange(desc(avg_rating))\n      \n      colnames(brewery2) <- c(\"Brewery Name\", \"Average Overall Rating\", \"Alcohol %\")\n      return(brewery2)\n    }\n  }, \n      options = list(pageLength = 15,\n                lengthChange = FALSE)\n  )\n  \n  output$popular <- renderDataTable({\n\n    if (input$x == \"brewery\"){\n      brewery <- beer_reviews %>%\n        group_by(brewery_name) %>%\n        summarize(n_obs = n(),\n                  avg_rating = round(mean(review_overall), digits=2),\n                  avg_abv = round(mean(beer_abv, na.rm = TRUE), digits=2)) %>%\n        filter(n_obs >= input$reviews) %>%\n        filter(avg_abv >= input$abv1[1], avg_abv <= input$abv1[2]) %>%\n        select(brewery_name, avg_rating, avg_abv) %>%\n        top_n(n = input$n, wt = avg_rating) %>%\n        arrange(desc(avg_rating))\n        \n      colnames(brewery) <- c(\"Brewery Name\", \"Average Overall Rating\", \"Alcohol %\")\n      return(brewery)\n    }\n    else if (input$x == \"style\"){\n      style <- beer_reviews %>%\n        group_by(beer_style) %>%\n        summarize(n_obs = n(),\n                  avg_rating = round(mean(review_overall), digits=2),\n                  avg_abv = round(mean(beer_abv, na.rm = TRUE), digits=2)) %>%\n        filter(n_obs >= input$reviews) %>%\n        filter(avg_abv >= input$abv2[1]) %>%\n        filter(avg_abv <= input$abv2[2]) %>%\n        select(beer_style, avg_rating, avg_abv) %>%\n        top_n(n = input$n, wt = avg_rating) %>%\n        arrange(desc(avg_rating))\n        \n      colnames(style) <- c(\"Beer Style\", \"Average Overall Rating\", \"Alcohol %\")\n      return(style)\n    }\n    else if (input$x == \"beer\"){\n      beers <- beer_reviews %>%\n        group_by(beer_name) %>%\n        summarize(n_obs = n(),\n                  avg_rating = round(mean(review_overall), digits=2),\n                  avg_abv = round(mean(beer_abv, na.rm = TRUE), digits=2)) %>%\n        filter(n_obs >= input$reviews) %>%\n        filter(avg_abv >= input$abv3[1], avg_abv <= input$abv3[2]) %>%\n        select(beer_name, avg_rating, avg_abv) %>%\n        top_n(n = input$n, wt = avg_rating) %>%\n        arrange(desc(avg_rating))\n      \n      colnames(beers) <- c(\"Beer Name\", \"Average Overall Rating\", \"Alcohol %\")\n      return(beers)\n    } \n  }, \n  options = list(pageLength = 15,\n                 lengthChange = FALSE)\n  )\n  \n})\n",
    "created" : 1490264323096.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "530930365",
    "id" : "62F8F448",
    "lastKnownWriteTime" : 1490269788,
    "last_content_update" : 1490269788627,
    "path" : "~/HIS - Data Science/Data Mining/Project/Beer-Recommender/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}